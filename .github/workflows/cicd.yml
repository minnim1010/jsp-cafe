name: CI/CD

on:
  push:
    branches: [ "ci/github-action" ]

jobs:
  CI:
    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: 'cafe_test'
          MYSQL_USER: 'test'
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

  CD:
    needs: [ CI ]
    runs-on: ubuntu-20.04

    steps:
      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            docker stop jsp-cafe || true
            docker rm jsp-cafe || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
            docker run -d -p 8080:8080 --name jsp-cafe \
              -e ENV=${{ secrets.ENV }} \
              -e DRIVER_CLASS_NAME=${{ secrets.DRIVER_CLASS_NAME }} \
              -e JDBC_URL=${{ secrets.JDBC_URL }} \
              -e JDBC_USER=${{ secrets.JDBC_USER }} \
              -e JDBC_PASSWORD=${{ secrets.JDBC_PASSWORD }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest